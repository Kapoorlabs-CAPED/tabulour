from __future__ import annotations
from typing import Any, Callable, Iterable, Protocol, TYPE_CHECKING

if TYPE_CHECKING:
    import pandas as pd

class BackendTableProtocol(Protocol):
    def __init__(self, data: pd.DataFrame): ...
    
    def dataShape(self) -> tuple[int, int]: ...
    def tableShape(self) -> tuple[int, int]: ...
    # API
    def getDataFrame(self) -> pd.DataFrame: ...
    def setDataFrame(self, value: pd.DataFrame) -> None: ...
    # properties
    def editability(self) -> bool: ...
    def setEditability(self, editable: bool) -> None: ...
    def selections(self) -> list[tuple[slice, slice]] : ...
    def setSelections(self, selections: Iterable[tuple[slice, slice]]): ...
    def zoom(self) -> float: ...
    def setZoom(self, value: float): ...
    def precision(self) -> int: ...
    def setPrecision(self, ndigits: int) -> None: ...
    def filter(self): ...
    def setFilter(self, sl) -> None: ...
    def refresh(self) -> None: ...
    
    # signal connection
    def connectItemChangedSignal(self, slot: Callable[[Any], Any]): ...
    def connectSelectionChangedSignal(self, slot: Callable[[Any], Any]): ...
